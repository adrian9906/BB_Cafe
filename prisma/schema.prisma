// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  name      String?
  username  String?     @unique
  password  String
  email     String      @unique
  image     String?
  rol       UserRole   @default(USER)
  createdAt DateTime    @default(now()) @map(name: "created_at")
  updatedAt DateTime    @updatedAt @map(name: "updated_at")
  accounts  Account[]
  sessions  Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole{
  USER
  ADMIN
}
model Product {
  id        String       @id @default(cuid())
  name      String
  description String
  price     Float
  image     String
  rating    Float
  category  String
  featured  Boolean  @default(false)
  flavors   String   @default("none")
}

model Workers {
  id        String   @id @default(cuid())
  name      String
  position  String
  description String
  image     String
}